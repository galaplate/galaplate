# {{PROJECT_NAME}}

A REST API built with GoPlate - a modern Go REST API boilerplate.

## Features

- ✅ HTTP Server with [Fiber](https://gofiber.io/)
- ✅ Database Integration (PostgreSQL/MySQL) with [GORM](https://gorm.io/)
- ✅ JWT Authentication Middleware
- ✅ Request Validation
- ✅ Background Job Queue
- ✅ Console Commands
- ✅ Structured Logging
- ✅ Environment Configuration
- ✅ Database Migrations
- ✅ Auto-generated API Documentation

## Quick Start

### Prerequisites

- Go 1.22.1 or higher
- {{DB_TYPE}} database
- Git

### Installation

1. **Clone and setup**:
   ```bash
   cd {{PROJECT_NAME}}
   cp .env.example .env
   ```

2. **Configure environment**:
   Edit `.env` with your database credentials and settings.

3. **Install dependencies**:
   ```bash
   go mod tidy
   ```

4. **Run migrations**:
   ```bash
   go run main.go console db:up
   ```

5. **Start the server**:
   ```bash
   make run
   # or
   go run main.go
   ```

The API will be available at `http://localhost:8080`

## Development

### Available Commands

```bash
# Development
make dev          # Run with hot reload
make build        # Build binary
make test         # Run tests
make fmt          # Format code

# Database
make db-up        # Run migrations
make db-down      # Rollback migration
make db-fresh     # Drop all tables and re-migrate
make db-seed      # Run seeders

# Console Commands
go run main.go console list                    # List all commands
go run main.go console db:status              # Check migration status
go run main.go console make:model User        # Generate model
go run main.go console make:controller UserController  # Generate controller
```

### Project Structure

```
{{PROJECT_NAME}}/
├── main.go                 # Application entry point
├── bootstrap/              # Application bootstrap
├── controllers/            # HTTP request handlers
├── middleware/             # HTTP middleware
├── models/                 # Database models
├── router/                 # Route definitions
├── db/
│   ├── migrations/         # Database migrations
│   └── seeders/           # Database seeders
├── docs/                   # API documentation
├── .env.example           # Environment template
└── Makefile              # Development commands
```

## API Documentation

API documentation is automatically generated and available at:
- Swagger UI: `http://localhost:8080/docs`
- API Reference: `./docs/api-reference.md`

## Environment Variables

| Variable | Description | Default |
|----------|-------------|---------|
| `APP_PORT` | Server port | `8080` |
| `APP_SCREET` | JWT secret key | Required |
| `DB_CONNECTION` | Database type | `{{DB_TYPE}}` |
| `DB_HOST` | Database host | `localhost` |
| `DB_PORT` | Database port | `5432`/`3306` |
| `DB_DATABASE` | Database name | Required |
| `DB_USERNAME` | Database user | Required |
| `DB_PASSWORD` | Database password | Required |

## Built With

- [GoPlate Core](https://github.com/sheenazien8/goplate-core) - Core framework functionality
- [Fiber](https://gofiber.io/) - HTTP web framework
- [GORM](https://gorm.io/) - ORM library
- [Logrus](https://github.com/sirupsen/logrus) - Structured logging
- [Validator](https://github.com/go-playground/validator) - Request validation

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support

- 📖 [Documentation](https://github.com/sheenazien8/goplate/docs)
- 🐛 [Issues](https://github.com/sheenazien8/goplate/issues)
- 💬 [Discussions](https://github.com/sheenazien8/goplate/discussions)

---

Generated with [GoPlate CLI](https://github.com/sheenazien8/goplate-cli)